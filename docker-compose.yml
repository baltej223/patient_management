version: "3.9"

services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    # environment:
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_DB: ${POSTGRES_DB}
    # volumes:
      # - postgres_data:/var/lib/postgresql/data
    networks:
      - mednet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - db
    env_file:
      - .env 
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
    ports:
      - "8080:8080"
    networks:
      - mednet
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /src/backend
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: package.json

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: medvault-auth
    ports:
      - "3000:3000"
    environment:
      # DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - mednet
    develop:
      watch:
      - action: sync
        path: ./auth
        target: /src/auth
        # ignore:
        #   - node_modules/
      - action: rebuild
        path: package.json

  # db-init:
  #   build:
  #     context: ./db-init
  #     dockerfile: Dockerfile
  #   container_name: medvault-db-init
  #   depends_on:
  #     - db
  #   env_file:
  #     - .env
  #   networks:
  #     - mednet
  #   restart: "no"

volumes:
  postgres_data:

networks:
  mednet: